#run a script .R
source('script.R')


## Vectors
numeric_vector <- c(1, 10, 49)
character_vector <- c("a", "b", "c")
boolean_vector <- c(TRUE,FALSE,TRUE)

poker_vector <- c(140, -50, 20, -120, 240)
names(poker_vector) <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")

# Define a new variable based on a selection
poker_sel <- poker_vector[1]
poker_midweek <- poker_vector[c(2,3,4)]

## matrices
new_hope <- c(460.998, 314.4)
empire_strikes <- c(290.475, 247.900)
return_jedi <- c(309.306, 165.8)

# Create box_office
box_office <- c(new_hope,empire_strikes,return_jedi)
# Construct star_wars_matrix
star_wars_matrix <- matrix(box_office,nrow=3,byrow=TRUE)

colnames(star_wars_matrix) <- region
rownames(star_wars_matrix) <- titles
worldwide_vector <- rowSums(star_wars_matrix)

#selection
us_visitors <- visitors[,1]

## factors
temperature_vector <- c("High", "Low", "High","Low", "Medium")
factor_temperature_vector <- factor(temperature_vector, order = TRUE, levels = c("Low", "Medium", "High"))
levels(factor_survey_vector) <- c("Female", "Male")

## dataframes
# Definition of vectors
name <- c("Mercury", "Venus", "Earth", "Mars", "Jupiter", "Saturn", "Uranus", "Neptune")
type <- c("Terrestrial planet", "Terrestrial planet", "Terrestrial planet", 
          "Terrestrial planet", "Gas giant", "Gas giant", "Gas giant", "Gas giant")
diameter <- c(0.382, 0.949, 1, 0.532, 11.209, 9.449, 4.007, 3.883)
rotation <- c(58.64, -243.02, 1, 1.03, 0.41, 0.43, -0.72, 0.67)
rings <- c(FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE)

# Create a data frame from the vectors
planets_df <- data.frame(name,type,diameter,rotation,rings)

#selection
planets_df[1,3]
planets_df[4,]
planets_df[1:5,"diameter"]

subset(planets_df,diameter<1)

#sorting
positions <-  order(planets_df$diameter)
planets_df[positions,]


## list
my_list <- list(my_vector,my_matrix,my_df)


## recall : in R bins are called breaks!!!! (just to bin balls)
hist_2 <- hist(loan_data$loan_amnt, breaks = 200, xlab = "Loan amount", 
               main = "Histogram of the loan amount")
hist_2$breaks


## Cross table -- Categorial variables
library(gmodels)
CrossTable(x=loan_data$grade,y=loan_data$loan_status,prop.r=TRUE,prop.c=FALSE,prop.t=FALSE,prop.chisq=FALSE)


## NA treatment
# Get indices of missing interest rates: na_index
na_index <- which(is.na(loan_data$int_rate))
# Remove observations with missing interest rates: loan_data_delrow_na
loan_data_delrow_na <- loan_data[-na_index, ]

# Delete interest rate column from loan_data_delcol_na
loan_data_delcol_na$int_rate <- NULL

median_ir <- median(loan_data$int_rate,na.rm=TRUE)
# Replace missing interest rates with median
loan_data_replace$int_rate[na_index] <- median_ir


##coarse classification
# Make the necessary replacements in the coarse classification example below 
loan_data$ir_cat <- rep(NA, length(loan_data$int_rate))
loan_data$ir_cat[which(loan_data$int_rate <= 8)] <- "0-8"
loan_data$ir_cat[which(loan_data$int_rate > 8 & loan_data$int_rate <= 11)] <- "8-11"
loan_data$ir_cat[which(loan_data$int_rate > 11 & loan_data$int_rate <= 13.5)] <- "11-13.5"
loan_data$ir_cat[which(loan_data$int_rate > 13.5)] <- "13.5+"
loan_data$ir_cat[which(is.na(loan_data$int_rate))] <- "Missing"
loan_data$ir_cat <- as.factor(loan_data$ir_cat)


## split test/train
# Set seed of 567
set.seed(567)
# Store row numbers for training set: index_train
index_train <- sample(c(1:nrow(loan_data)), 2 / 3 * nrow(loan_data))
# Create training set: training_set
training_set <- loan_data[index_train, ]
# Create test set: test_set
test_set <- loan_data[-index_train, ]


#logistic regression
log_model_cat <- glm(loan_status ~ ir_cat, family = "binomial", data = training_set)
log_model_multi <- glm(loan_status~age+ir_cat+grade+loan_amnt+annual_inc,family="binomial",training_set)
# Obtain significance levels using summary()
summary(log_model_multi)
#with all  the varauables
log_model_small <- glm(loan_status ~ ., family = "binomial", data = training_set)
#predict
predictions_all_full <- predict(log_model_full,newdata=test_set,type="response")
pred_cutoff_15 <- ifelse(predictions_all_full>0.15,1,0)
# Construct a confusion matrix
table(test_set$loan_status,pred_cutoff_15)
#accuracy
acc_logit <- sum(diag(tab_class_logit)) / nrow(test_set)
